<launch>
	<!-- Launch 3 nodes as below
	At development stage, each node should be launched in a separated terminal to view the output -->

	<arg name="remote"				default="10.0.0.79" />
	<arg name="mapping" 			default="false" />
	<arg name="remote_mapping" 		default="false" />
	<arg name="gamepad" 			default="false" />
	<arg name="ps4" 				default="false" />
	<arg name="fcu_url" 			default="/dev/ttyACM0:57600" />
	<arg name="gcs_url" 			default="udp://@$(arg remote)" />
	<arg name="tgt_system" 			default="1" />
	<arg name="tgt_component" 		default="1" />
	<arg name="log_output" 			default="screen" />
	<arg name="fcu_protocol" 		default="v2.0" />
	<arg name="respawn_mavros" 		default="true" />
	<arg name="teleop_args" 		default="-rc" />
	<arg name="addr" 				default="" />
  	<arg name="use_standard_msgs" 	default="true" />
  	<arg name="autorepeat_rate" 	default="20" if="$(arg use_standard_msgs)" />	

	<arg name="device_type_camera1"	default="t265"/>
	<arg name="device_type_camera2"	default="d4.5"/>		<!-- Note: using regular expression. match D435, D435i, D415... -->
	<arg name="serial_no_camera1"   default=""/>
	<arg name="serial_no_camera2"   default=""/>
	<arg name="camera1"             default="camera"/>
	<arg name="camera2"             default="d400"/>
	<arg name="tf_prefix_camera1"   default="$(arg camera1)"/>
	<arg name="tf_prefix_camera2"   default="$(arg camera2)"/>
	<arg name="initial_reset"       default="false"/>
	<arg name="enable_fisheye"      default="false"/>
	<arg name="color_width"         default="424"/>
	<arg name="color_height"        default="240"/>
	<arg name="color_fps"           default="6"/>
	<arg name="depth_width"         default="424"/>
	<arg name="depth_height"        default="240"/>
	<arg name="depth_fps"           default="6"/>
	<arg name="clip_distance"       default="-2"/>
	<arg name="topic_odom_in"       default="odom_in"/>
	<arg name="calib_odom_file"     default=""/>

	<arg name="use_rviz"            default="false"/>
	<arg name="use_rtabmapviz"      default="false"/>

	<machine name="base_station" 	address="$(arg remote)"/>

	<!-- This node will launch the ROS driver for Realsense T265 -->
	<include file="$(find realsense2_camera)/launch/rs_t265.launch"/>

	<group if="$(arg mapping)">
		<group ns="$(arg camera2)">
			<include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
				<arg name="device_type"           	value="$(arg device_type_camera2)"/>
				<arg name="serial_no"            	value="$(arg serial_no_camera2)"/>
				<arg name="tf_prefix"		      	value="$(arg tf_prefix_camera2)"/>
				<arg name="initial_reset"         	value="$(arg initial_reset)"/>
				<arg name="align_depth"           	value="true"/>
				<arg name="color_width"           	value="$(arg color_width)"/>
				<arg name="color_height"          	value="$(arg color_height)"/>
				<arg name="color_fps"           	value="$(arg color_fps)"/>	
				<arg name="depth_width"           	value="$(arg depth_width)"/>
				<arg name="depth_height"          	value="$(arg depth_height)"/>
				<arg name="depth_fps"           	value="$(arg depth_fps)"/>
				<arg name="clip_distance"         	value="$(arg clip_distance)"/>
			</include>
		</group>

		<node pkg="tf" type="static_transform_publisher" name="t265_to_d400" args="-0.16 0 0 3.1415 0 -1.5708 /$(arg tf_prefix_camera1)_link /$(arg tf_prefix_camera2)_link 100"/>
		<node pkg="tf" type="static_transform_publisher" name="t265_to_center" args="-0.05 0 0 3.1415 0 0 /$(arg tf_prefix_camera1)_link /center_link 100"/>

		<include file="$(find rtabmap_ros)/launch/rtabmap.launch" machine="base_station" if="$(arg remote_mapping)">
			<arg name="rtabmap_args"       value="--delete_db_on_start --Vis/MaxFeatures 300 --Mem/ImagePreDecimation 2 --Mem/ImagePostDecimation 2 --Kp/DetectorStrategy 6 --OdomF2M/MaxSize 800 --Odom/ImageDecimation 2"/>
			<arg name="depth_topic"        value="/$(arg camera2)/aligned_depth_to_color/image_raw"/>
			<arg name="frame_id"           value="$(arg camera2)_link"/>
			<arg name="visual_odometry"    value="false"/>
			<arg name="odom_topic"         value="/$(arg camera1)/odom/sample"/>
			<arg name="rgb_topic"          value="/$(arg camera2)/color/image_raw"/>
			<arg name="camera_info_topic"  value="/$(arg camera2)/color/camera_info"/>
			<arg name="queue_size"         value="200"/>
			<arg name="rviz"               value="$(arg use_rviz)"/>
			<arg name="rtabmapviz"         value="$(arg use_rtabmapviz)"/>
		</include>
		<include file="$(find rtabmap_ros)/launch/rtabmap.launch" unless="$(arg remote_mapping)">
			<arg name="rtabmap_args"       value="--delete_db_on_start --Vis/MaxFeatures 300 --Mem/ImagePreDecimation 2 --Mem/ImagePostDecimation 2 --Kp/DetectorStrategy 6 --OdomF2M/MaxSize 800 --Odom/ImageDecimation 2"/>
			<arg name="depth_topic"        value="/$(arg camera2)/aligned_depth_to_color/image_raw"/>
			<arg name="frame_id"           value="$(arg camera2)_link"/>
			<arg name="visual_odometry"    value="false"/>
			<arg name="odom_topic"         value="/$(arg camera1)/odom/sample"/>
			<arg name="rgb_topic"          value="/$(arg camera2)/color/image_raw"/>
			<arg name="camera_info_topic"  value="/$(arg camera2)/color/camera_info"/>
			<arg name="queue_size"         value="200"/>
			<arg name="rviz"               value="$(arg use_rviz)"/>
			<arg name="rtabmapviz"         value="$(arg use_rtabmapviz)"/>
		</include>
	</group>

	<!-- This node will launch MAVROS -->
	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" 	value="$(find mavros)/launch/apm_pluginlists.yaml" />
		<arg name="config_yaml" 		value="$(find mavros)/launch/apm_config.yaml" />
		<arg name="fcu_url" 			value="$(arg fcu_url)" />
		<arg name="gcs_url" 			value="$(arg gcs_url)" />
		<arg name="tgt_system" 			value="$(arg tgt_system)" />
		<arg name="tgt_component" 		value="$(arg tgt_component)" />
		<arg name="log_output" 			value="$(arg log_output)" />
		<arg name="fcu_protocol" 		value="$(arg fcu_protocol)" />
		<arg name="respawn_mavros" 		value="$(arg respawn_mavros)" />
		<param name="autorepeat_rate" 		value=""/>
	</include>

	<!-- This node will launch the node that bridges realsense-ros and MAVROS -->
	 
	<param name="target_frame_id"   value="/camera_odom_frame" />
	<param name="source_frame_id"   value="/camera_link" />
	<param name="output_rate"       value="30" />
	<param name="roll_cam"          value="0" />
	<param name="pitch_cam"         value="0" />
	<param name="yaw_cam"           value="3.1415" />
	<param name="gamma_world"       value="-1.5707963" />

    <node pkg="vision_to_mavros" type="vision_to_mavros_node" name="t265_to_mavros" output="screen" >
        <remap from="vision_pose" to="/mavros/vision_pose/pose" />
    </node>

	<node pkg="tracker_bot" type="tracker_distance_from_depth" name="obstacle_avoidance" output="screen" if="$(arg mapping)"/>

	<!-- Group that runs only if gamepad is true to control from a gamepad -->
	<group if="$(arg gamepad)">
		<node pkg="ds4_driver" type="ds4_driver_node.py" name="ds4_driver" output="screen" if="$(arg ps4)">
			<rosparam command="load" file="$(find ds4_driver)/config/params.yaml" />
			<param name="device_addr" 			value="$(arg addr)" />
			<param name="use_standard_msgs" 	value="$(arg use_standard_msgs)" />
			<param name="autorepeat_rate" 		value="$(arg autorepeat_rate)" if="$(arg use_standard_msgs)" />
		</node>
		
		<node pkg="joy" type="joy_node" name="joy" required="True" unless="$(arg ps4)">
			<param name="autorepeat_rate" 		value="30" /> <!-- Minimal update rate, Hz -->
			<param name="dev" 					value="/dev/input/js0" />
		</node>

		<node pkg="mavros_extras" type="mavteleop" name="mavteleop" args="$(arg teleop_args)" required="True" output="screen">
			<rosparam command="load" file="$(find mavros_extras)/launch/f710_joy.yaml" />
		</node>
	</group>

</launch>
